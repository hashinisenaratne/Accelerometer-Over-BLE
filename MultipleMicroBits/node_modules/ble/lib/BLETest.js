const AbstractComponent = require('kevoree-entities').AbstractComponent;
const BLE = require('./BLE');
/**
* Kevoree component
* @type {BLETest}
*/
var BLETest = AbstractComponent.extend({
toString: 'BLETest',
//Attributes
construct: function() {
this.ble = new BLE("ble", null, false, null, null, false);
/*$PLUGINS$*/
//Connecting internal ports...
//Connecting ports...
this.ble.stateChangeOnBLEInternalListeners.push(this.ble.receivestateChangeOnBLEInternalRec.bind(this.ble));
this.ble.discoverOnBLEInternalListeners.push(this.ble.receivediscoverOnBLEInternalRec.bind(this.ble));
this.ble.scanStartOnBLEInternalListeners.push(this.ble.receivescanStartOnBLEInternalRec.bind(this.ble));
this.ble.scanStopOnBLEInternalListeners.push(this.ble.receivescanStopOnBLEInternalRec.bind(this.ble));
/*$PLUGINS_CONNECTORS$*/
this.ble.stateChangeOnBLEListeners.push(this.ble_BLE_stateChange_proxy.bind(this));
this.ble.discoverOnBLEListeners.push(this.ble_BLE_discover_proxy.bind(this));
this.ble.scanStartOnBLEListeners.push(this.ble_BLE_scanStart_proxy.bind(this));
this.ble.scanStopOnBLEListeners.push(this.ble_BLE_scanStop_proxy.bind(this));
},

start: function (done) {
this.ble._init();
done();
},

stop: function (done) {
this.ble._stop();
done();
},
in_ble_BLE_connect_in: function (msg) {//@protocol "kevoree" for message connect on port BLE
this.ble.receiveconnectOnBLE(msg.split(';'));
},
in_ble_BLE_disconnect_in: function (msg) {//@protocol "kevoree" for message disconnect on port BLE
this.ble.receivedisconnectOnBLE(msg.split(';'));
},
in_ble_BLE_startScanning_in: function (msg) {//@protocol "kevoree" for message startScanning on port BLE
this.ble.receivestartScanningOnBLE(msg.split(';'));
},
in_ble_BLE_stopScanning_in: function (msg) {//@protocol "kevoree" for message stopScanning on port BLE
this.ble.receivestopScanningOnBLE(msg.split(';'));
},
in_ble_BLE_discoverServices_in: function (msg) {//@protocol "kevoree" for message discoverServices on port BLE
this.ble.receivediscoverServicesOnBLE(msg.split(';'));
},
ble_BLE_stateChange_proxy: function() {//@protocol "kevoree" for message stateChange on port BLE
this.out_ble_BLE_stateChange_out(arguments[0]);},
out_ble_BLE_stateChange_out: function(msg) {/* This will be overwritten @runtime by Kevoree JS */},
ble_BLE_discover_proxy: function() {//@protocol "kevoree" for message discover on port BLE
this.out_ble_BLE_discover_out(arguments[0]);},
out_ble_BLE_discover_out: function(msg) {/* This will be overwritten @runtime by Kevoree JS */},
ble_BLE_scanStart_proxy: function() {//@protocol "kevoree" for message scanStart on port BLE
this.out_ble_BLE_scanStart_out();},
out_ble_BLE_scanStart_out: function(msg) {/* This will be overwritten @runtime by Kevoree JS */},
ble_BLE_scanStop_proxy: function() {//@protocol "kevoree" for message scanStop on port BLE
this.out_ble_BLE_scanStop_out();},
out_ble_BLE_scanStop_out: function(msg) {/* This will be overwritten @runtime by Kevoree JS */}});

module.exports = BLETest;

